[mcu display]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_2B0023000843535035373520-if00
restart_method: command

[display]
lcd_type: sh1106
i2c_mcu: display
i2c_bus: i2c1a
# Set the direction of the encoder wheel
#   Standard: Right (clockwise) scrolls down or increases values. Left (counter-clockwise scrolls up or decreases values.
encoder_pins: ^display:PA3, ^display:PA4
#   Reversed: Right (clockwise) scrolls up or decreases values. Left (counter-clockwise scrolls down or increases values.
#encoder_pins: ^display:PA4, ^display:PA3
click_pin: ^!display:PA1
kill_pin: ^!display:PA5
#x_offset: 2
#   Use X offset to shift the display towards the right. Value can be 0 to 3
#vcomh: 0
#   Set the Vcomh value on SSD1306/SH1106 displays. This value is
#   associated with a "smearing" effect on some OLED displays. The
#   value may range from 0 to 63. Default is 0.
#   Adjust this value if you get some vertical stripes on your display. (31 seems to be a good value)

[neopixel displayStatus]
pin: display:PA0
chain_count: 1
color_order: GRB
initial_RED: 0.5
initial_GREEN: 0.0
initial_BLUE: 0.5

# ADDITIONAL CONTROL COMMANDS
[menu __main __control __G32]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: G32
gcode: G32

[menu __main __control __QGL]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: QGL
gcode: QUAD_GANTRY_LEVEL

[menu __main __control __mesh]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Mesh
gcode: BED_MESH_CALIBRATE

[menu __main __control __qglmesh]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: QGL & Mesh
gcode: 
	QUAD_GANTRY_LEVEL
	BED_MESH_CALIBRATE

[menu __main __control __parkfront]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Park front
gcode: PARKFRONT

[menu __main __control __parkfrontlow]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Park front low
gcode: PARKFRONTLOW

[menu __main __control __parkrear]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Park rear
gcode: PARKREAR

[menu __main __control __parkcenter]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Park center
gcode: PARKCENTER

[menu __main __control __parkbed]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Park bed
gcode: PARKBED